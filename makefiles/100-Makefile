# Makefile for creating the 'school' executable

# Compiler and compiler flags
COMPILER = gcc
CUSTOM_FLAGS = -Wall -Werror -Wextra -pedantic  # Add your desired flags here

# Source files
SRC = main.c school.c  # Add your source files here

# Object files derived from source files
OBJ = $(SRC:.c=.o)

# Executable name
NAME = school

# Default rule
all: $(NAME)

$(NAME): $(OBJ)
	$(COMPILER) $(CUSTOM_FLAGS) -o $@ $^

# Rule to build individual object files
%.o: %.c
	$(COMPILER) $(CUSTOM_FLAGS) -c -o $@ $<

# Program to delete files
RM = rm -f

# Clean rule to remove object files and the executable
clean:
	$(RM) $(OBJ) $(NAME) *~ \#*#

# Rule to remove only object files
oclean:
	$(RM) $(OBJ)

# Rule to remove object files, executable, and temporary editor files
fclean:
	$(RM) $(OBJ) $(NAME) *~ \#*#

# Rule to force recompilation of all source files
re: fclean all

# Phony targets to prevent conflicts with files named 'all' or 'clean'
.PHONY: all clean oclean fclean re

# Check for the existence of the header file m.h
ifeq (,$(wildcard m.h))
$(error The header file 'm.h' is missing)
endif
